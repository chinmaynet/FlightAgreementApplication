// <auto-generated />
using System;
using FlightAgreementApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightAgreementApplication.Migrations
{
    [DbContext(typeof(FlightAgreementAppContext))]
    [Migration("20231220132337_activationtokencanbenull")]
    partial class activationtokencanbenull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlightAgreementApplication.Model.Airline", b =>
                {
                    b.Property<Guid>("AirlineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AirlineContactPreferences")
                        .HasColumnType("int");

                    b.Property<string>("AirlineEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineLandLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlinePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AirlineID");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AirlineManager", b =>
                {
                    b.Property<Guid>("AirlineManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AirlineManagerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineManagerLandLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineManagerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineManagerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AirlineManagerId");

                    b.ToTable("AirlineManagers");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.Airport", b =>
                {
                    b.Property<Guid>("AirportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AirportCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AirportId");

                    b.ToTable("Airport");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexFlights", b =>
                {
                    b.Property<Guid>("AnnexFlightsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AnnexRequestID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("FlightID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AnnexFlightsID");

                    b.HasIndex("AnnexRequestID");

                    b.HasIndex("FlightID");

                    b.ToTable("AnnexFlights");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexQuotation", b =>
                {
                    b.Property<Guid>("AnnexQuotationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AirlineID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnnexRequestID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuotationDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnnexQuotationID");

                    b.HasIndex("AirlineID");

                    b.HasIndex("AnnexRequestID");

                    b.ToTable("AnnexQuotation");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexQuotationFlights", b =>
                {
                    b.Property<Guid>("AnnexQuotationFlightsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AirlineID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnnexQuotationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnnexRequestID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("FlightID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AnnexQuotationFlightsID");

                    b.HasIndex("AirlineID");

                    b.HasIndex("AnnexQuotationID");

                    b.HasIndex("AnnexRequestID");

                    b.HasIndex("FlightID");

                    b.ToTable("AnnexQuotationFlights");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexRequest", b =>
                {
                    b.Property<Guid>("AnnexRequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AirlineID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnnexContractDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnnexTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MasterContractID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequestStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("SeasonID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TourOperatorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ValidityEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidityStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AnnexRequestID");

                    b.HasIndex("AirlineID");

                    b.HasIndex("MasterContractID");

                    b.HasIndex("SeasonID");

                    b.HasIndex("TourOperatorID");

                    b.ToTable("AnnexRequest");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexRequestParameter", b =>
                {
                    b.Property<Guid>("AnnexRequestParameterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AnnexRequestID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("MasterContractParameterID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MasterContractParametersMasterContractParameterID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParameterValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnnexRequestParameterID");

                    b.HasIndex("AnnexRequestID");

                    b.HasIndex("MasterContractParametersMasterContractParameterID");

                    b.ToTable("AnnexRequestParameter");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexRequestSpecialServices", b =>
                {
                    b.Property<Guid>("AnnexRequestSpecialServicesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AnnexRequestID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("FlightSegmentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SSID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SpecialServicesSSID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AnnexRequestSpecialServicesID");

                    b.HasIndex("AnnexRequestID");

                    b.HasIndex("FlightSegmentID");

                    b.HasIndex("SpecialServicesSSID");

                    b.ToTable("AnnexRequestSpecialServices");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexTaxes", b =>
                {
                    b.Property<Guid>("AnnexTaxID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AnnexFlightsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnnexRequestID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("GeneralTaxesTaxID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TaxID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AnnexTaxID");

                    b.HasIndex("AnnexFlightsID");

                    b.HasIndex("AnnexRequestID");

                    b.HasIndex("GeneralTaxesTaxID");

                    b.ToTable("AnnexTaxes");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.Flight", b =>
                {
                    b.Property<Guid>("FlightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AirlineID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("DepartureAirportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DestinationAirportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EconomySeatsNo")
                        .HasColumnType("int");

                    b.Property<string>("FlightCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlightType")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PremiumSeatsNo")
                        .HasColumnType("int");

                    b.HasKey("FlightID");

                    b.HasIndex("AirlineID");

                    b.HasIndex("DepartureAirportId");

                    b.HasIndex("DestinationAirportId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.FlightContract", b =>
                {
                    b.Property<Guid>("FlightContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("FlightID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FlightContractId");

                    b.HasIndex("FlightID");

                    b.ToTable("FlightContract");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.FlightSegment", b =>
                {
                    b.Property<Guid>("FlightSegmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SegmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FlightSegmentID");

                    b.ToTable("FlightSegment");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.GeneralTaxes", b =>
                {
                    b.Property<Guid>("TaxID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AirportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Applicability")
                        .HasColumnType("int");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TaxIncluded")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ValidityEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidityStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TaxID");

                    b.HasIndex("AirportId");

                    b.ToTable("GeneralTaxes");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.MasterContract", b =>
                {
                    b.Property<Guid>("MasterContractID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AirlineID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApprovalWorkflow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfidentialityAndNonDisclosure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractType")
                        .HasColumnType("int");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RenewalInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminationClause")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermsAndConditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TourOperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MasterContractID");

                    b.HasIndex("AirlineID");

                    b.HasIndex("TourOperatorId");

                    b.ToTable("MasterContract");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.MasterContractParameters", b =>
                {
                    b.Property<Guid>("MasterContractParameterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParameterDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterContractParameterID");

                    b.ToTable("MasterContractParameters");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.ReleaseFlightSettings", b =>
                {
                    b.Property<Guid>("ReleaseFlightSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("FlightID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReleaseSeats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReleaseSettingsID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReleaseFlightSettingsId");

                    b.HasIndex("FlightID");

                    b.HasIndex("ReleaseSettingsID");

                    b.ToTable("ReleaseFlightSettings");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.ReleaseSettings", b =>
                {
                    b.Property<Guid>("ReleaseSettingsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AnnexRequestID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReleaseSettingsID");

                    b.HasIndex("AnnexRequestID");

                    b.ToTable("ReleaseSettings");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.Season", b =>
                {
                    b.Property<Guid>("SeasonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeasonCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeasonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("SeasonID");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.SeasonFlightsAssociation", b =>
                {
                    b.Property<Guid>("AssociationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("FlightID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SeasonID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AssociationID");

                    b.HasIndex("FlightID");

                    b.HasIndex("SeasonID");

                    b.ToTable("SeasonFlightsAssociations");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.SpecialServices", b =>
                {
                    b.Property<Guid>("SSID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SSRCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSRName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Surcharge")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SSID");

                    b.ToTable("SpecialServices");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.Tariffs", b =>
                {
                    b.Property<Guid>("TariffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AnnexRequestID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CHDDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("FlightSegmentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("INDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsBlockSpace")
                        .HasColumnType("bit");

                    b.Property<int>("MIN")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SSRIncluded")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Surcharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TariffCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TariffType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidityEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidityStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TariffID");

                    b.HasIndex("AnnexRequestID");

                    b.HasIndex("FlightSegmentID");

                    b.ToTable("Tariffs");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.TourOperator", b =>
                {
                    b.Property<Guid>("TourOperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedStatus")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TourOperatorAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TourOperatorContactPreferences")
                        .HasColumnType("int");

                    b.Property<string>("TourOperatorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourOperatorLandLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourOperatorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourOperatorPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TourOperatorId");

                    b.ToTable("TourOperators");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActivationTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<int>("ActivityStatus")
                        .HasColumnType("int");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.UserRole", b =>
                {
                    b.Property<Guid>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AirlineManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TourOperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserRoleId");

                    b.HasIndex("AirlineManagerId");

                    b.HasIndex("RId");

                    b.HasIndex("TourOperatorId");

                    b.HasIndex("UId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexFlights", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.AnnexRequest", "AnnexRequest")
                        .WithMany()
                        .HasForeignKey("AnnexRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnnexRequest");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexQuotation", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.Airline", "Airline")
                        .WithMany()
                        .HasForeignKey("AirlineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.AnnexRequest", "AnnexRequest")
                        .WithMany()
                        .HasForeignKey("AnnexRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");

                    b.Navigation("AnnexRequest");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexQuotationFlights", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.Airline", "Airline")
                        .WithMany()
                        .HasForeignKey("AirlineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.AnnexQuotation", "AnnexQuotation")
                        .WithMany()
                        .HasForeignKey("AnnexQuotationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.AnnexRequest", "AnnexRequest")
                        .WithMany()
                        .HasForeignKey("AnnexRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");

                    b.Navigation("AnnexQuotation");

                    b.Navigation("AnnexRequest");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexRequest", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.Airline", "Airline")
                        .WithMany()
                        .HasForeignKey("AirlineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.MasterContract", "MasterContract")
                        .WithMany()
                        .HasForeignKey("MasterContractID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.Season", "Season")
                        .WithMany()
                        .HasForeignKey("SeasonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.TourOperator", "TourOperator")
                        .WithMany()
                        .HasForeignKey("TourOperatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");

                    b.Navigation("MasterContract");

                    b.Navigation("Season");

                    b.Navigation("TourOperator");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexRequestParameter", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.AnnexRequest", "AnnexRequest")
                        .WithMany()
                        .HasForeignKey("AnnexRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.MasterContractParameters", "MasterContractParameters")
                        .WithMany()
                        .HasForeignKey("MasterContractParametersMasterContractParameterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnnexRequest");

                    b.Navigation("MasterContractParameters");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexRequestSpecialServices", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.AnnexRequest", "AnnexRequest")
                        .WithMany()
                        .HasForeignKey("AnnexRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.FlightSegment", "FlightSegment")
                        .WithMany()
                        .HasForeignKey("FlightSegmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.SpecialServices", "SpecialServices")
                        .WithMany()
                        .HasForeignKey("SpecialServicesSSID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnnexRequest");

                    b.Navigation("FlightSegment");

                    b.Navigation("SpecialServices");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.AnnexTaxes", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.AnnexFlights", "AnnexFlights")
                        .WithMany()
                        .HasForeignKey("AnnexFlightsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.AnnexRequest", "AnnexRequest")
                        .WithMany()
                        .HasForeignKey("AnnexRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.GeneralTaxes", "GeneralTaxes")
                        .WithMany()
                        .HasForeignKey("GeneralTaxesTaxID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnnexFlights");

                    b.Navigation("AnnexRequest");

                    b.Navigation("GeneralTaxes");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.Flight", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.Airline", "Airline")
                        .WithMany()
                        .HasForeignKey("AirlineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.Airport", "DepartureAirport")
                        .WithMany()
                        .HasForeignKey("DepartureAirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.Airport", "DestinationAirport")
                        .WithMany()
                        .HasForeignKey("DestinationAirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");

                    b.Navigation("DepartureAirport");

                    b.Navigation("DestinationAirport");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.FlightContract", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.GeneralTaxes", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.Airport", "Airport")
                        .WithMany()
                        .HasForeignKey("AirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airport");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.MasterContract", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.Airline", "Airline")
                        .WithMany()
                        .HasForeignKey("AirlineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.TourOperator", "TourOperator")
                        .WithMany()
                        .HasForeignKey("TourOperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");

                    b.Navigation("TourOperator");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.ReleaseFlightSettings", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.ReleaseSettings", "ReleaseSettings")
                        .WithMany()
                        .HasForeignKey("ReleaseSettingsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("ReleaseSettings");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.ReleaseSettings", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.AnnexRequest", "AnnexRequest")
                        .WithMany()
                        .HasForeignKey("AnnexRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnnexRequest");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.SeasonFlightsAssociation", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.Season", "Season")
                        .WithMany()
                        .HasForeignKey("SeasonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.Tariffs", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.AnnexRequest", "AnnexRequest")
                        .WithMany()
                        .HasForeignKey("AnnexRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.FlightSegment", "FlightSegment")
                        .WithMany()
                        .HasForeignKey("FlightSegmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnnexRequest");

                    b.Navigation("FlightSegment");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.UserRole", b =>
                {
                    b.HasOne("FlightAgreementApplication.Model.AirlineManager", "AirlineManager")
                        .WithMany()
                        .HasForeignKey("AirlineManagerId");

                    b.HasOne("FlightAgreementApplication.Model.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAgreementApplication.Model.TourOperator", "TourOperator")
                        .WithMany()
                        .HasForeignKey("TourOperatorId");

                    b.HasOne("FlightAgreementApplication.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirlineManager");

                    b.Navigation("Role");

                    b.Navigation("TourOperator");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FlightAgreementApplication.Model.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
